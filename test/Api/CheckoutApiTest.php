<?php
/**
 * CheckoutApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Reepay
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Reepay Checkout API
 *
 * Reepay Checkout REST API
 *
 * OpenAPI spec version: 1
 * Contact: open.source@driveoscar.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Reepay;

use Reepay\Configuration;
use Reepay\ApiException;
use Reepay\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CheckoutApiTest Class Doc Comment
 *
 * @category Class
 * @package  Reepay
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CheckoutApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptSepaMandate
     *
     * Accept sepa mandate.
     *
     */
    public function testAcceptSepaMandate()
    {
    }

    /**
     * Test case for authKlarnaSession
     *
     * Authorize Klarna session.
     *
     */
    public function testAuthKlarnaSession()
    {
    }

    /**
     * Test case for chargeCheckoutSession
     *
     * Finish charge using source.
     *
     */
    public function testChargeCheckoutSession()
    {
    }

    /**
     * Test case for createAnydaySession
     *
     * Create Anyday session.
     *
     */
    public function testCreateAnydaySession()
    {
    }

    /**
     * Test case for createApplepaySession
     *
     * Create Apple Pay session.
     *
     */
    public function testCreateApplepaySession()
    {
    }

    /**
     * Test case for createGooglepaySession
     *
     * Create Google Pay session.
     *
     */
    public function testCreateGooglepaySession()
    {
    }

    /**
     * Test case for createIdealSepaSession
     *
     * Create IDEAL sepa session.
     *
     */
    public function testCreateIdealSepaSession()
    {
    }

    /**
     * Test case for createKlarnaSession
     *
     * Create Klarna session.
     *
     */
    public function testCreateKlarnaSession()
    {
    }

    /**
     * Test case for createMpoSession
     *
     * Create MobilePay Online session.
     *
     */
    public function testCreateMpoSession()
    {
    }

    /**
     * Test case for createMpsSession
     *
     * Create MobilePay Subscriptions session.
     *
     */
    public function testCreateMpsSession()
    {
    }

    /**
     * Test case for createOfflineSession
     *
     * Create Offline session.
     *
     */
    public function testCreateOfflineSession()
    {
    }

    /**
     * Test case for createPayeverSession
     *
     * Create Payever session.
     *
     */
    public function testCreatePayeverSession()
    {
    }

    /**
     * Test case for createPaypalSession
     *
     * Create PayPal session.
     *
     */
    public function testCreatePaypalSession()
    {
    }

    /**
     * Test case for createPproSession
     *
     * Create ppro session.
     *
     */
    public function testCreatePproSession()
    {
    }

    /**
     * Test case for createResursSession
     *
     * Create Resurs session.
     *
     */
    public function testCreateResursSession()
    {
    }

    /**
     * Test case for createSepaSession
     *
     * Create sepa session.
     *
     */
    public function testCreateSepaSession()
    {
    }

    /**
     * Test case for createSwishSession
     *
     * Create Swish session.
     *
     */
    public function testCreateSwishSession()
    {
    }

    /**
     * Test case for createVerificationSession
     *
     * Create verification session.
     *
     */
    public function testCreateVerificationSession()
    {
    }

    /**
     * Test case for createViabillSession
     *
     * Create ViaBill session.
     *
     */
    public function testCreateViabillSession()
    {
    }

    /**
     * Test case for createVippsRecurringSession
     *
     * Create Vipps Recurring session.
     *
     */
    public function testCreateVippsRecurringSession()
    {
    }

    /**
     * Test case for createVippsSession
     *
     * Create Vipps session.
     *
     */
    public function testCreateVippsSession()
    {
    }

    /**
     * Test case for getCheckoutPreviewSession
     *
     * Get checkout preview session data.
     *
     */
    public function testGetCheckoutPreviewSession()
    {
    }

    /**
     * Test case for getCheckoutSession
     *
     * Get checkout session data.
     *
     */
    public function testGetCheckoutSession()
    {
    }

    /**
     * Test case for getResursPaymentMethodCost
     *
     * Get HTML with cost of Resurs payment method.
     *
     */
    public function testGetResursPaymentMethodCost()
    {
    }

    /**
     * Test case for getResursPaymentMethods
     *
     * Get Resurs payment methods.
     *
     */
    public function testGetResursPaymentMethods()
    {
    }

    /**
     * Test case for getSepaPrefillValues
     *
     * Get prefill values for sepa form.
     *
     */
    public function testGetSepaPrefillValues()
    {
    }

    /**
     * Test case for getTerms
     *
     * Get account terms template.
     *
     */
    public function testGetTerms()
    {
    }

    /**
     * Test case for recurringCheckoutSession
     *
     * Save recurring customer payment method.
     *
     */
    public function testRecurringCheckoutSession()
    {
    }

    /**
     * Test case for subscriptionCheckoutSession
     *
     * Set payment method on subscription.
     *
     */
    public function testSubscriptionCheckoutSession()
    {
    }
}
